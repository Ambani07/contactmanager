{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","protoType","PropTypes","string","isRequired","func","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updatedContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5de722a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    \r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload )\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => (contact.id === action.payload.id) ?\r\n                        contact = action.payload : contact )\r\n            }\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state} >\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }\r\n\r\n    render() {\r\n        const {id, name , email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} {' '}<i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} \r\n                                className=\"fa fa-sort-down\" style={{cursor: 'pointer'}}/>\r\n                                <i className=\"fa fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i  className=\"fa fa-pencil\"\r\n                                        style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">Email: {email}</li>\r\n                            <li className=\"list-group-item\">Phone: {phone}</li>\r\n                        </ul>) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\n\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact </span>List</h1>\r\n                            { contacts.map(contact => (\r\n                            <Contact key={contact.id} contact={contact} />\r\n                            )) }\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Contacts","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{label}</label>\r\n                <input\r\n                    type={type}\r\n                    className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n                    placeholder={placeholder}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    />\r\n                    {error && <div className=\"invalid-feedback\">{error}</div>}\r\n                    \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nTextInputGroup.protoType = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e)=> {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        //check for errors\r\n        if(name === '') {\r\n            this.setState({errors: {name: 'Name is requires'}});\r\n            return;\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({errors: {email: 'Email is requires'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({errors: {phone: 'Phone is requires'}});\r\n            return;\r\n        }\r\n\r\n        //key name are the same with form values\r\n        //so there's no need to write an object in full \r\n        //e.g newContact = {{name:name}};\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        //post request\r\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\r\n\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n        // dispatch({type: 'ADD_CONTACT', payload: newContact})\r\n\r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //redirect\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name] : e.target.value});\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">Add Contact</div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup \r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter name\"\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            type=\"email\"\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter email\"\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter phone\"\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e)=> {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        //check for errors\r\n        if(name === '') {\r\n            this.setState({errors: {name: 'Name is requires'}});\r\n            return;\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({errors: {email: 'Email is requires'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({errors: {phone: 'Phone is requires'}});\r\n            return;\r\n        }\r\n\r\n        //key name are the same with form values\r\n        //so there's no need to write an object in full \r\n        //e.g newContact = {{name:name}};\r\n        const updatedContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        //get id from URL\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //redirect\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name] : e.target.value});\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">Edit Contact</div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup \r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter name\"\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            type=\"email\"\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter email\"\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter phone\"\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\" >{ branding }</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fa fa-home\"></i>Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fa fa-plus\"></i>Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fa fa-question\"></i>About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n           {/* <h1 className=\"display-4\">{props.match.params.id}</h1>  */}\r\n           <h1 className=\"display-4\">About Contact Manager</h1> \r\n           <p className=\"lead\">Simple app to manage</p>\r\n           <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404</span> Page Not Found\r\n            </h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n    componentDidMount() {\r\n        console.log('componentDidMount...');\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data =>this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }))\r\n    }\r\n\r\n\r\n    // componentWillMount(){\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('componentDidUpdate...');\r\n    // }\r\n\r\n    // componentWillUpdate(){\r\n    //     console.log('componentWillUpdate...');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextstate) {\r\n    //     console.log('componentWillReceiveProps...');\r\n    // }\r\n\r\n    // //DEPRICATED\r\n    // UNSAFE_componentWillReceiveProps(nextProps, nextstate) {\r\n    //     console.log('componentWillReceiveProps...');\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     return null;\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n\r\n    // }\r\n\r\n    render() {\r\n        const {title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\n//used in basename={process.env.PUBLIC_URL}\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div>\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n             <Switch>\n               <Route exact path=\"/\" component={Contacts}></Route>\n               <Route exact path=\"/contact/add\" component={AddContact}></Route>\n               <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n               {/* <Route exact path=\"/about/:id\" component={About}></Route> */}\n               <Route exact path=\"/about\" component={About}></Route>\n               <Route exact path=\"/test\" component={Test}></Route>\n               <Route component={NotFound}></Route>\n             </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}